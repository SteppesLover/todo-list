- Think of an example of something you have done in your life that you failed at multiple times before you got it—doesn't have to be coding-related, maybe a sports play, a piece on a musical instrument, or a video game level. How did you keep yourself motivated to keep trying?
One example is my experience with economics simulation games. These games are all about finding a balance between meeting people's needs and achieving target values like profits, growth, or stability. At first, I failed a lot—my cities would collapse, or I'd run out of resources. But I kept going because of curiosity. I wasn’t trying to “win” right away—I just genuinely wanted to understand why things failed and how small changes could shift the whole system. That mindset—of seeing failure as feedback—kept me motivated. Each restart was a chance to test a new theory.
- Have you witnessed others learn from failures and then succeed? What strategies have they used?
Yes, especially in programming communities and during group projects. I’ve seen people struggle with debugging code or understanding how different parts of a system connect. The ones who succeed tend to approach failure analytically—they break the problem into smaller parts, ask questions, and don’t get discouraged easily. One friend of mine used a “journal” method: every time he failed, he wrote down what happened and what he learned from it. Over time, he built a personal knowledge base. Another strategy I saw was peer support—talking to others and explaining their problem out loud helped them discover the solution themselves.