import { useEffect, useState } from 'react';

function App() {
  const [todos, setTodos] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [errorMessage, setErrorMessage] = useState("");

  const url = `https://api.airtable.com/v0/${import.meta.env.VITE_BASE_ID}/${import.meta.env.VITE_TABLE_NAME}`;
  const token = `Bearer ${import.meta.env.VITE_PAT}`;

  useEffect(() => {
    const fetchTodos = async () => {
      setIsLoading(true);

      const options = {
        method: 'GET',
        headers: {
          Authorization: token,
        },
      };

      try {
        const resp = await fetch(url, options);
        if (!resp.ok) {
          throw new Error(`Fetch failed with status ${resp.status}`);
        }

        const data = await resp.json();
        console.log("Airtable response:", data); 
        setTodos(data.records);
      } catch (error) {
        setErrorMessage(error.message);
        console.error("Error fetching todos:", error);
      } finally {
        setIsLoading(false);
      }
    };

    fetchTodos();
  }, [url, token]);

  return (
    <div>
      <h1>Airtable Todo Fetch</h1>
      {isLoading && <p>Loading...</p>}
      {errorMessage && <p style={{ color: 'red' }}>Error: {errorMessage}</p>}
      <ul>
        {todos.map((item) => (
          <li key={item.id}>{item.fields.Title}</li> 
        ))}
      </ul>
    </div>
  );
}

      <TodoList todoList={todos} 
      onCompleteTodo={completeTodo}   
      onUpdateTodo={updateTodo} 
      isLoading={isLoading}
      />

export default App;